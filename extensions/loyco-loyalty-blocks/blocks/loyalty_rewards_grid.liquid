{% comment %}
  Loyalty Rewards Grid Block
  Displays available rewards that customers can redeem
{% endcomment %}

{% if customer %}
  <div class="loyco-rewards-grid"
       data-customer-id="{{ customer.id }}"
       data-shop="{{ shop.permanent_domain }}"
       data-rewards-limit="{{ block.settings.rewards_limit | default: 6 }}"
       style="--loyco-accent-color: {{ block.settings.accent_color }};">

    {% if block.settings.heading != blank %}
      <h3 class="loyco-rewards-heading">{{ block.settings.heading }}</h3>
    {% endif %}

    <div class="loyco-rewards-loading">
      <div class="loyco-spinner"></div>
      <p>Loading available rewards...</p>
    </div>

    <div class="loyco-rewards-container" style="display: none;">
      <div class="loyco-rewards-list"></div>
    </div>

    <div class="loyco-no-rewards" style="display: none;">
      <div class="loyco-empty-state">
        <div class="loyco-empty-icon">üéÅ</div>
        <h4>No rewards available yet</h4>
        <p>Keep earning points to unlock amazing rewards!</p>
      </div>
    </div>

    <div class="loyco-rewards-error" style="display: none;">
      <p>Unable to load rewards. Please try again later.</p>
    </div>
  </div>

  <!-- Reward Redemption Modal -->
  <div class="loyco-modal" id="loyco-reward-modal" style="display: none;">
    <div class="loyco-modal-backdrop"></div>
    <div class="loyco-modal-content">
      <div class="loyco-modal-header">
        <h3 class="loyco-modal-title">Redeem Reward</h3>
        <button class="loyco-modal-close">&times;</button>
      </div>
      <div class="loyco-modal-body">
        <div class="loyco-reward-details">
          <img class="loyco-reward-image" alt="Reward" />
          <h4 class="loyco-reward-name"></h4>
          <p class="loyco-reward-description"></p>
          <div class="loyco-reward-cost">
            <span class="loyco-points-required"></span>
            <span class="loyco-points-label">points required</span>
          </div>
        </div>
      </div>
      <div class="loyco-modal-footer">
        <button class="loyco-btn loyco-btn-secondary" data-modal-cancel>Cancel</button>
        <button class="loyco-btn loyco-btn-primary" data-modal-confirm>Redeem Now</button>
      </div>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', function() {
      const rewardsGrid = document.querySelector('.loyco-rewards-grid');
      if (!rewardsGrid) return;

      const customerId = rewardsGrid.dataset.customerId;
      const shop = rewardsGrid.dataset.shop;
      const rewardsLimit = parseInt(rewardsGrid.dataset.rewardsLimit);

      if (!customerId || !shop) return;

      loadAvailableRewards(rewardsGrid, customerId, shop, rewardsLimit);
      initRewardModal();
    });

    function loadAvailableRewards(grid, customerId, shop, limit) {
      const loadingEl = grid.querySelector('.loyco-rewards-loading');
      const containerEl = grid.querySelector('.loyco-rewards-container');
      const noRewardsEl = grid.querySelector('.loyco-no-rewards');
      const errorEl = grid.querySelector('.loyco-rewards-error');

      // Show loading state
      loadingEl.style.display = 'block';
      containerEl.style.display = 'none';
      noRewardsEl.style.display = 'none';
      errorEl.style.display = 'none';

      // Build App Proxy URL
      const proxyUrl = `/apps/loyco-rewards/api/customer/${customerId}/status?shop=${shop}&timestamp=${Date.now()}&signature=temp`;

      fetch(proxyUrl)
        .then(response => response.json())
        .then(data => {
          loadingEl.style.display = 'none';

          if (data.enrolled && data.availableRewards?.length > 0) {
            renderRewards(grid, data.availableRewards.slice(0, limit), data.customer.pointsBalance);
            containerEl.style.display = 'block';
          } else {
            noRewardsEl.style.display = 'block';
          }
        })
        .catch(error => {
          console.error('Failed to load rewards:', error);
          loadingEl.style.display = 'none';
          errorEl.style.display = 'block';
        });
    }

    function renderRewards(grid, rewards, customerPoints) {
      const rewardsList = grid.querySelector('.loyco-rewards-list');
      const showPointsRequired = grid.closest('[data-show-points-required]')?.dataset.showPointsRequired !== 'false';

      rewardsList.innerHTML = rewards.map(reward => {
        const canAfford = customerPoints >= reward.pointsCost;
        const affordabilityClass = canAfford ? 'loyco-reward-affordable' : 'loyco-reward-unaffordable';

        return `
          <div class="loyco-reward-card ${affordabilityClass}"
               data-reward-id="${reward.id}"
               data-reward-name="${reward.name}"
               data-reward-description="${reward.description || ''}"
               data-reward-cost="${reward.pointsCost}"
               data-reward-image="${reward.imageUrl || ''}">

            ${reward.imageUrl ? `<img src="${reward.imageUrl}" alt="${reward.name}" class="loyco-reward-img" />` : `<div class="loyco-reward-placeholder">üéÅ</div>`}

            <div class="loyco-reward-info">
              <h4 class="loyco-reward-title">${reward.name}</h4>

              ${reward.description ? `<p class="loyco-reward-desc">${reward.description}</p>` : ''}

              ${showPointsRequired ? `
                <div class="loyco-reward-points">
                  <span class="loyco-points-cost">${reward.pointsCost.toLocaleString()}</span>
                  <span class="loyco-points-unit">points</span>
                </div>
              ` : ''}

              <button class="loyco-redeem-btn ${canAfford ? '' : 'loyco-btn-disabled'}"
                      ${canAfford ? '' : 'disabled'}
                      onclick="openRewardModal('${reward.id}')">
                ${canAfford ? 'Redeem' : 'Not enough points'}
              </button>
            </div>
          </div>
        `;
      }).join('');
    }

    function openRewardModal(rewardId) {
      const rewardCard = document.querySelector(`[data-reward-id="${rewardId}"]`);
      if (!rewardCard) return;

      const modal = document.getElementById('loyco-reward-modal');
      const rewardName = rewardCard.dataset.rewardName;
      const rewardDescription = rewardCard.dataset.rewardDescription;
      const rewardCost = rewardCard.dataset.rewardCost;
      const rewardImage = rewardCard.dataset.rewardImage;

      // Populate modal
      modal.querySelector('.loyco-reward-name').textContent = rewardName;
      modal.querySelector('.loyco-reward-description').textContent = rewardDescription;
      modal.querySelector('.loyco-points-required').textContent = parseInt(rewardCost).toLocaleString();

      const imageEl = modal.querySelector('.loyco-reward-image');
      if (rewardImage) {
        imageEl.src = rewardImage;
        imageEl.style.display = 'block';
      } else {
        imageEl.style.display = 'none';
      }

      // Set up confirmation handler
      const confirmBtn = modal.querySelector('[data-modal-confirm]');
      confirmBtn.onclick = () => redeemReward(rewardId);

      // Show modal
      modal.style.display = 'flex';
      document.body.style.overflow = 'hidden';
    }

    function redeemReward(rewardId) {
      const grid = document.querySelector('.loyco-rewards-grid');
      const customerId = grid.dataset.customerId;
      const shop = grid.dataset.shop;

      const confirmBtn = document.querySelector('[data-modal-confirm]');
      const originalText = confirmBtn.textContent;
      confirmBtn.textContent = 'Redeeming...';
      confirmBtn.disabled = true;

      const redeemUrl = `/apps/loyco-rewards/api/customer/${customerId}/redeem?shop=${shop}&timestamp=${Date.now()}&signature=temp`;

      fetch(redeemUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          rewardId: rewardId,
          quantity: 1
        })
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          closeRewardModal();
          showRedemptionSuccess(data.redemption);
          // Reload rewards to update availability
          loadAvailableRewards(grid, customerId, shop, parseInt(grid.dataset.rewardsLimit));
        } else {
          throw new Error(data.error || 'Redemption failed');
        }
      })
      .catch(error => {
        console.error('Redemption failed:', error);
        alert('Failed to redeem reward. Please try again.');
      })
      .finally(() => {
        confirmBtn.textContent = originalText;
        confirmBtn.disabled = false;
      });
    }

    function initRewardModal() {
      const modal = document.getElementById('loyco-reward-modal');
      const closeBtn = modal.querySelector('.loyco-modal-close');
      const cancelBtn = modal.querySelector('[data-modal-cancel]');
      const backdrop = modal.querySelector('.loyco-modal-backdrop');

      [closeBtn, cancelBtn, backdrop].forEach(el => {
        el.addEventListener('click', closeRewardModal);
      });
    }

    function closeRewardModal() {
      const modal = document.getElementById('loyco-reward-modal');
      modal.style.display = 'none';
      document.body.style.overflow = '';
    }

    function showRedemptionSuccess(redemption) {
      // Simple success notification
      const notification = document.createElement('div');
      notification.className = 'loyco-success-notification';
      notification.innerHTML = `
        <div class="loyco-success-content">
          <span class="loyco-success-icon">‚úÖ</span>
          <span>Reward redeemed successfully!</span>
          ${redemption.code ? `<span class="loyco-redemption-code">Code: ${redemption.code}</span>` : ''}
        </div>
      `;

      document.body.appendChild(notification);

      setTimeout(() => {
        notification.remove();
      }, 5000);
    }
  </script>

  <style>
    .loyco-rewards-grid {
      margin: 20px 0;
      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    }

    .loyco-rewards-heading {
      margin: 0 0 20px 0;
      font-size: 1.5rem;
      font-weight: 600;
      color: #1f2937;
    }

    .loyco-rewards-loading {
      display: flex;
      align-items: center;
      justify-content: center;
      gap: 12px;
      padding: 40px 20px;
      text-align: center;
    }

    .loyco-spinner {
      width: 24px;
      height: 24px;
      border: 2px solid #e5e7eb;
      border-top: 2px solid var(--loyco-accent-color, #f59e0b);
      border-radius: 50%;
      animation: loyco-spin 1s linear infinite;
    }

    .loyco-rewards-list {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
      gap: 20px;
    }

    .loyco-reward-card {
      background: #fff;
      border: 1px solid #e5e7eb;
      border-radius: 12px;
      overflow: hidden;
      transition: transform 0.2s, box-shadow 0.2s;
    }

    .loyco-reward-card:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .loyco-reward-affordable {
      border-color: var(--loyco-accent-color, #f59e0b);
    }

    .loyco-reward-unaffordable {
      opacity: 0.7;
    }

    .loyco-reward-img, .loyco-reward-placeholder {
      width: 100%;
      height: 160px;
      object-fit: cover;
    }

    .loyco-reward-placeholder {
      display: flex;
      align-items: center;
      justify-content: center;
      background: #f3f4f6;
      font-size: 3rem;
    }

    .loyco-reward-info {
      padding: 16px;
    }

    .loyco-reward-title {
      margin: 0 0 8px 0;
      font-size: 1.125rem;
      font-weight: 600;
      color: #1f2937;
    }

    .loyco-reward-desc {
      margin: 0 0 12px 0;
      font-size: 0.875rem;
      color: #6b7280;
      line-height: 1.4;
    }

    .loyco-reward-points {
      display: flex;
      align-items: baseline;
      gap: 4px;
      margin-bottom: 16px;
    }

    .loyco-points-cost {
      font-size: 1.25rem;
      font-weight: bold;
      color: var(--loyco-accent-color, #f59e0b);
    }

    .loyco-points-unit {
      font-size: 0.875rem;
      color: #6b7280;
    }

    .loyco-redeem-btn {
      width: 100%;
      background: var(--loyco-accent-color, #f59e0b);
      color: white;
      border: none;
      padding: 12px 16px;
      border-radius: 6px;
      font-weight: 500;
      cursor: pointer;
      transition: background-color 0.2s;
    }

    .loyco-redeem-btn:hover:not(:disabled) {
      background: color-mix(in srgb, var(--loyco-accent-color, #f59e0b) 90%, black);
    }

    .loyco-btn-disabled {
      background: #d1d5db !important;
      cursor: not-allowed !important;
    }

    .loyco-empty-state {
      text-align: center;
      padding: 60px 20px;
    }

    .loyco-empty-icon {
      font-size: 4rem;
      margin-bottom: 16px;
    }

    .loyco-empty-state h4 {
      margin: 0 0 8px 0;
      font-size: 1.25rem;
      color: #1f2937;
    }

    .loyco-empty-state p {
      margin: 0;
      color: #6b7280;
    }

    /* Modal Styles */
    .loyco-modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 9999;
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .loyco-modal-backdrop {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
    }

    .loyco-modal-content {
      position: relative;
      background: white;
      border-radius: 12px;
      max-width: 480px;
      width: 90%;
      max-height: 90vh;
      overflow: hidden;
    }

    .loyco-modal-header {
      display: flex;
      align-items: center;
      justify-content: space-between;
      padding: 20px;
      border-bottom: 1px solid #e5e7eb;
    }

    .loyco-modal-title {
      margin: 0;
      font-size: 1.25rem;
      font-weight: 600;
    }

    .loyco-modal-close {
      background: none;
      border: none;
      font-size: 1.5rem;
      cursor: pointer;
      padding: 4px;
    }

    .loyco-modal-body {
      padding: 20px;
    }

    .loyco-reward-details .loyco-reward-image {
      width: 100%;
      height: 200px;
      object-fit: cover;
      border-radius: 8px;
      margin-bottom: 16px;
    }

    .loyco-modal-footer {
      padding: 20px;
      border-top: 1px solid #e5e7eb;
      display: flex;
      gap: 12px;
      justify-content: flex-end;
    }

    .loyco-btn {
      padding: 12px 24px;
      border-radius: 6px;
      font-weight: 500;
      cursor: pointer;
      border: none;
    }

    .loyco-btn-primary {
      background: var(--loyco-accent-color, #f59e0b);
      color: white;
    }

    .loyco-btn-secondary {
      background: #f3f4f6;
      color: #374151;
    }

    .loyco-success-notification {
      position: fixed;
      top: 20px;
      right: 20px;
      z-index: 10000;
      background: #10b981;
      color: white;
      padding: 16px 20px;
      border-radius: 8px;
      box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    }

    .loyco-success-content {
      display: flex;
      align-items: center;
      gap: 8px;
    }

    .loyco-redemption-code {
      font-weight: bold;
      margin-left: 8px;
    }

    @keyframes loyco-spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
{% else %}
  <div class="loyco-rewards-grid">
    <div class="loyco-guest-message">
      <p>Please <a href="/account/login">sign in</a> to view available rewards.</p>
    </div>
  </div>

  <style>
    .loyco-guest-message {
      text-align: center;
      padding: 40px 20px;
      border: 1px solid #e5e7eb;
      border-radius: 8px;
      background: #f9fafb;
    }

    .loyco-guest-message a {
      color: #6366f1;
      text-decoration: none;
    }

    .loyco-guest-message a:hover {
      text-decoration: underline;
    }
  </style>
{% endif %}